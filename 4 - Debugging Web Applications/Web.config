<?xml version="1.0"?>

<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>
  <configSections>
    <!-- 
      Spring configuration.  With VS2010 SP1 or higher, you can put the dlls into a special folder 
      called _bin_deployableAssemblies and the dlls will be copied.  You do not need to reference them 
      in your project, as long as somehow they end up in your application's bin directory
    -->
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.WebContextHandler, Spring.Web" />
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
      <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core" />
      <section name="aliases" type="Spring.Context.Support.TypeAliasesSectionHandler, Spring.Core" />
    </sectionGroup>
    <!-- Common:  common/logging will allow us to debug Spring.NET! See logging configuration below -->
    <!--<sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>-->
  </configSections>
  <!-- Logging: Setup spring to log using Log4Net -->
  <!--<common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <arg key="configType" value="FILE" />
        <arg key="configFile" value="~/Log.config" />
      </factoryAdapter>
    </logging>
  </common>-->
  <!-- Spring configuration.  If this isn't in web.config, you'll get an error 'no application context for virtual path' -->
  <spring>
    <context>
      <!-- Typically we move spring configuration to a separate file.  These files can get relatively large in a real application -->
      <resource uri="~/spring.config" />
    </context>
  </spring>

  <system.web>
    <!-- Spring.Net HttpHandlers for pages, controls and services (ashx) -->
    <!-- Without these handlers, ASP.Net will provide the pages and Spring won't do anything! -->
    <!-- ERROR: We forgot to uncomment the httpHandlers to enable Spring -->
    <!--<httpHandlers>
      <add verb="*" path="*.aspx" type="Spring.Web.Support.PageHandlerFactory, Spring.Web" />
      <add verb="*" path="*.ashx" type="Spring.Web.Support.MappingHandlerFactory, Spring.Web" validate="true" />
      <add verb="*" path="*.ascx" type="Spring.Web.Support.PageHandlerFactory, Spring.Web" />
    </httpHandlers>-->
    <!-- Spring.Net HttpModule providing other ASP.NET support (e.g. module injection, session support) 
         Also provides a resource handler for the 'web' protocol -->
    <!-- ERROR: We forgot to uncomment the httpModule, resulting in the error:
                Resource handler for the 'web' protocol is not defined.
    -->
    <!--<httpModules>
      <add name="Spring" type="Spring.Context.Support.WebSupportModule, Spring.Web" />
    </httpModules>-->
    <compilation debug="true" targetFramework="4.0" />

    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login.aspx" timeout="2880" />
    </authentication>

    <membership>
      <providers>
        <clear/>
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="ApplicationServices"
             enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false"
             maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10"
             applicationName="/" />
      </providers>
    </membership>

    <profile>
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="ApplicationServices" applicationName="/"/>
      </providers>
    </profile>

    <roleManager enabled="false">
      <providers>
        <clear/>
        <add name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="ApplicationServices" applicationName="/" />
        <add name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider" applicationName="/" />
      </providers>
    </roleManager>

  </system.web>

  <!-- IIS7 and above running in integrated mode.  
       This test project is configured for Cassini (Integrated web server emulating IIS6),
       but in a normal application, you'd need this too.  -->
  <system.webServer>
    <handlers>
      <add name="SpringPageHandler" preCondition="integratedMode" verb="*" path="*.aspx" type="Spring.Web.Support.PageHandlerFactory, Spring.Web" />
      <add name="SpringContextMonitor" preCondition="integratedMode" verb="*" path="ContextMonitor.ashx" type="Spring.Web.Support.ContextMonitor, Spring.Web" />
      <add name="SpringHandlerHandler" preCondition="integratedMode" verb="*" path="*.ashx" type="Spring.Web.Support.MappingHandlerFactory, Spring.Web" />
      <add name="SpringControlHandler" preCondition="integratedMode" verb="*" path="*.ascx" type="Spring.Web.Support.PageHandlerFactory, Spring.Web" />
    </handlers>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="Spring" preCondition="integratedMode" type="Spring.Context.Support.WebSupportModule, Spring.Web"/>
    </modules>    
  </system.webServer>
</configuration>
